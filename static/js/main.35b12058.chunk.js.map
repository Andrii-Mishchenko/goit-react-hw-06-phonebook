{"version":3,"sources":["Phonebook.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContacts","items","createReducer","initialContacts","actions","state","map","contact","includes","alert","filter","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","persistor","persistStore","ContactForm","nameInputId","numberInputId","handleInput","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","form__label","htmlFor","form__input","type","pattern","title","required","onChange","button","Component","connect","dispatch","contactsActions","allContacts","normalizedFilter","toLowerCase","getVisibleContacts","onDeleteContact","contacts__item","buttonDelete","onClick","target","App","container","formSubmitHandler","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.35b12058.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__3ZpQj\",\"title\":\"Phonebook_title__1DOjr\",\"form\":\"Phonebook_form__282Sd\",\"form__label\":\"Phonebook_form__label__reFpS\",\"form__input\":\"Phonebook_form__input__1zB1S\",\"button\":\"Phonebook_button__1KZC9\",\"buttonDelete\":\"Phonebook_buttonDelete__3_C6P\",\"contacts\":\"Phonebook_contacts__2ewP5\",\"contacts__item\":\"Phonebook_contacts__item__2vVKU\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/Add', ({ name, number }) => ({   \r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number\r\n    },    \r\n}));\r\n\r\nconst deleteContact = createAction('contacts/Delete');\r\n\r\nconst filterContacts = createAction('contacts/Filter');\r\n\r\nexport default { addContact, deleteContact, filterContacts };","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions'\r\nimport initialContacts from '../../initialContacts.json'\r\n\r\nconst items = createReducer(initialContacts, {\r\n    \r\n    [actions.addContact]: (state, { payload }) => state.map(contact => contact.name).includes(payload.name)\r\n    ? alert(`${payload.name} is already in contacts.`)\r\n    : [payload, ...state],\r\n    \r\n    [actions.deleteContact]: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filterContacts]: (state, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n}),\r\n    logger\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    },\r\n    middleware,\r\n});\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default {store, persistor};","import React, {Component} from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types'\r\nimport styles from'../../Phonebook.module.css'\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = { \r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleInput = e =>{\r\n        const {name, value} = e.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <form className={styles.form} onSubmit={this.handleSubmit} >\r\n                <label className={styles.form__label} htmlFor={this.nameInputId}>\r\n                    Name\r\n                    <input\r\n                        className={styles.form__input}\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={this.handleInput}\r\n                        id={this.nameInputId}\r\n                    />\r\n                </label>\r\n            \r\n                <label className={styles.form__label} htmlFor={this.numberInputId}>\r\n                    Number\r\n                    <input\r\n                        className={styles.form__input}\r\n                        type=\"tel\"\r\n                        value={this.state.number}\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={this.handleInput}\r\n                        id={this.numberInputId}\r\n                    />\r\n                </label>\r\n                <button className={styles.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: ({name, number}) => dispatch(contactsActions.addContact({name, number}))\r\n})\r\n \r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from'../../Phonebook.module.css'\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => (\r\n    <ul className={styles.contacts}>\r\n        {contacts.map(({id, name, number}) => (\r\n            <li className={styles.contacts__item} key={id}>\r\n                <p>{name}: {number}</p>\r\n                <button className={styles.buttonDelete} type=\"button\" onClick={()=>onDeleteContact(id)}>Delete</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n) \r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,    \r\n    onDeleteContact: PropTypes.func.isRequired,    \r\n}\r\n\r\nconst getVisibleContacts =(allContacts, filter) => {\r\n    const normalizedFilter= filter.toLowerCase();\r\n    return allContacts.filter(contact=>\r\n        contact.name.toLowerCase().includes(normalizedFilter));\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { filter, items } = state.contacts;\r\n   \r\n    const visibleContacts = getVisibleContacts(items, filter )\r\n\r\n    return {\r\n        \r\n        contacts: visibleContacts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from'../../Phonebook.module.css'\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <div className={styles.contacts}>\r\n        <label className={styles.form__label}>\r\n            Find contacts by name\r\n            <input \r\n                className={styles.form__input} \r\n                type=\"text\" value={value} \r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    </div>\r\n)\r\n \r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,    \r\n    onChange: PropTypes.func.isRequired,    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (e) => dispatch(contactsActions.filterContacts(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, {Component} from 'react';\r\nimport ContactForm from './components/ContactForm'\r\nimport ContactList from './components/ContactList'\r\nimport Filter from './components/Filter'\r\nimport styles from'./Phonebook.module.css'\r\n\r\nclass App extends Component {\r\n  \r\n      // formSubmitHandler = ({name, number}) =>{\r\n   \r\n    //     const contact = {\r\n    //         id: shortid.generate(),\r\n    //         name,\r\n    //         number\r\n    //     }\r\n\r\n    //     const { contacts } = this.state;\r\n    //     const names = contacts.map((contact) => contact.name);\r\n\r\n    //     names.includes(contact.name)\r\n    //     ? alert(`${contact.name} is already in contacts.`)\r\n    //     : this.setState(prevState => ({\r\n    //         contacts: [contact, ...prevState.contacts]\r\n    //     }))\r\n    // }\r\n\r\n    render() { \r\n\r\n        return (  \r\n            <div className={styles.container}>\r\n                <h1 className={styles.title}>Phonebook</h1>\r\n                <ContactForm onSubmit={this.formSubmitHandler}/>\r\n                <h2 className={styles.title}>Contacts</h2>\r\n                <Filter/>\r\n                <ContactList/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n       <App />\r\n      </PersistGate>      \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}